const _0x2e4d = ['Image', 'Rebet\x20bets', 'isFaceUp', 'removeAll', '23456789TJQKA', 'Add\x20cursor\x20value', 'splitPair', 'TargetFontInstructionSize', 'chipClick', 'Card\x20To\x20Dealer', '-=70', 'Point', 'assets/images/2nd\x20Chance\x20Banner.png', 'Play\x20dealer\x20hand', 'beginDeal', 'setOrigin', 'One\x20pair', 'GameObjects', 'payoffOffset', 'ResolveInsurance', 'assets/images/Red\x20123x35.png', 'SplitPair', 'CheckForInsurance', 'doAnimation', 'dropPixel', 'Straight\x20flush', 'StartDeal', 'random', 'CardsRemaining', 'drawReturningProbabilityOfRank', 'setColor', 'sound', 'BlueSmall', 'DealerHandAnchor', 'Instructions', './assets/sounds.ChipClick.ogg', 'Hint,\x20please', 'handTotalToHandString', 'Flip\x20hole\x20card', 'maximumBet', 'shuffle', 'CDHS', '_playerTotals', 'DealerDrawCard', 'pointerout', 'MinimumBet', 'ChangeCursorValue', 'buttonDown', 'clickNo', 'input', 'length', '_lastWagerAmounts', '_cardNumber', 'scene', 'destroy', 'EventEmitter', '_maximumBet', 'tween', 'SecondChanceLocations', 'params', 'helpFormat', 'Resolve\x20player\x20hand\x20#2', 'updateControls', 'abs', 'pointerup', '_newButton', '_shoe', 'Insurance', 'grayTextSmall', '_isPlayerSpot', 'buttonWidth', 'updateLocation', 'MaximumBet', 'CLEAR', 'Yes', 'logo', 'Soft\x20', 'emit', '_minimumBet', '_doubleButton', 'children', 'flipHoleCard', 'AnnotateDealer', '_cursorValue', 'doubleDown', 'DEAL', 'BANKROLL', 'Two\x20pair', 'Math', 'clearBettingSpots', '_payoutList', 'assets/images/Blue\x20123x35.png', 'REBET', 'HINT', 'chipWidth', 'MainOffset', 'setText', 'resolvePayout', 'CardToDealer', 'giveHint', 'spritesheet', 'grayTextLarge', '_testDealerHand', '_chipButtons', 'Scene', '_label', 'buttonUp', 'RedSmall', 'resolvePlayerHand', 'fillSpot', 'Resolve\x20player\x20hand\x20#1', '_isLocked', '22\x20-\x20push', 'setBackgroundColor', 'assets/images/Drop\x20Shape\x20Pixel.jpg', 'alpha', 'isOptional', '_hintButton', 'Primes', '\x20not\x20resolved\x20in\x20clickYes();', 'ClearBettingSpots', 'Resolve\x20player\x20natural', 'dealerBar', 'lineStyle', '_dealButton', 'round', 'Geom', 'Hand\x20#', 'amount', 'PlayerScoreCommentary', '_isMouseOver', 'Card\x20To\x20Player', 'clearTint', '_rebetButton', 'STEP\x20NOT\x20RESOLVED:\x20', '_gameFelt', 'Full\x20house', '22px', 'Container', 'gameWidth', 'Sprite', 'Resolve\x20player\x20hand\x20#3', 'DoubleBack', 'Score', '_isFaceUp', 'IsPlayerSpot', 'clickEvent', '_caption', 'Split', '_clearButton', 'game-div', 'sprite', 'selectCursorValue', '_insuranceBettingSpot', 'PlayerSpotLocations', 'assets/images/Blue\x20Text\x20130x50.png', 'StraightCodes', 'assets/images/Gray\x20Text\x20345x50.png', 'Five\x20of\x20a\x20kind', 'CHANGE\x20STATE:\x20Main\x20input', 'PlayDealerHand', 'CHANGE\x20STATE:\x20Game\x20Over', 'cardNumberToString', 'create', 'left', 'blueText', '_commentaryList', 'CheckForDoubleBack', 'gameFelt', 'clicked', 'InsuranceLocation', 'buttonGreenSmall', '_clearDealPanel', 'Royal\x20flush', '_scoreField', 'Out', '_value', 'Hit', 'Double', 'push', 'CardToPlayer', 'Resolve\x20Bust', 'HitZone', 'STAND', 'STATE\x20ID#\x20NOT\x20HANDLED:\x20', 'cardHeight', '_bettingSpots', 'setInteractive', '_numCards', '_noButton', 'Easing', '_testPlayerHand', '_dealerAnchor', 'setFrame', 'setStyle', 'No\x20pair', '\x20not\x20resolved\x20in\x20clickNo();', '_currentHand', 'PostDoubleControl', 'addBlackjackValueToHandValue', '_handCount', '_helpField', 'getProbabilityOfDrawingRank', 'YES', 'InsurancePayoffOffset', '_background', 'BeginDeal', 'pop', 'Check\x20hole\x20card', 'IsFaceUp', '_playerAnchors', '_score', 'visible', '\x20of\x20', 'text', 'drawReturningCountOfRank', 'fontColor', 'setWordWrapWidth', 'newBets', 'buttonBlueSmall', '_yesButton', 'buttonOver', 'Change\x20cursor\x20value', 'deliverCard', 'drawCard', 'Amount', '_playerHands', 'selectChip', 'commentaryFormat', 'addCardNumberToHandValue', 'adjustQuantityOfRank', 'scoreFormat', 'Dealer\x20draw\x20card', 'substr', '#FFFFFF', '_newRebetButtonPanel', '_dealerTotal', 'height', 'assets/images/TGS\x20Chips.png', 'Stand', 'Value', 'Arial', 'CardRanks', 'assets/images/Green\x20123x35.png', '_isOptional', 'cardNumber', 'Straight', 'setDisplaySize', 'Clear\x20betting\x20spots', 'debug', 'setTint', 'addCardRankToHandValue', 'angle', 'ResolvePlayer0', 'ChipStackOffset', 'emitter', '20px', 'IsLocked', 'playClick', 'Resolve\x20insurance', '_stepList', 'CardSuits', 'Four\x20of\x20a\x20kind', 'image', 'hitOnHand', 'load', '#000000', 'pointerover', '_splitButton', 'ForceNextHand', '_secondChanceSpots', 'gameReference', 'clearGameObjectArray', 'setFontStyle', 'gameOptions', 'assets/images/2nd\x20Chance\x20Dealer\x20Bar.png', '_mainPanel', 'checkAndReturnHoleCard', 'GameScene', 'predealInitialization', '_standButton', 'center', 'card', '_numDecks', 'fontSize', '_config', 'graphics', 'clickYes', 'Current\x20state\x20', 'HIT', 'blackjack', '_rankCount', 'setFontSize', 'banner', 'MainInput', 'floor', '_payoffOffset', 'getCountOfRank', 'Predeal', 'checkAndFlipHoleCard', 'scale', 'Expo', 'split', 'Check\x20For\x20Insurance', '_yesNoPanel', 'bold', './assets/sounds/ChipClick.mp3', 'SPLIT', 'disableInteractive', 'max', 'HintPlease', 'setPadding', 'initGame', 'assets/images/Gray\x20Text\x20430x50.png', 'add', 'Click\x20on\x20chip\x20to\x20select\x20denomination,\x20click\x20on\x20ANTE\x20and/or\x20BONUS\x20betting\x20spots\x20to\x20add\x20chips,\x20click\x20DEAL\x20to\x20begin.', 'lock', 'CardNumber', 'gameobjectup', 'PayoffOffset', 'chipValues', 'rebetBets', 'Would\x20you\x20like\x20to\x20make\x20a\x20Second\x20Chance\x20wager\x20on\x20your\x20busted\x20hand?\x20(YES\x20/\x20NO)', 'play', 'existing', 'resolveDealerNatural', 'CheckHoleCard', '+=70', 'Events', 'minimumBet', 'cardVectorToString', 'tweens', 'ResolvePlayer3', 'Post\x20double\x20control', 'GameOver', 'Hard\x20', 'buttonHeight', 'Trips', 'setFixedSize', 'Game\x20over.\x20\x20Click\x20\x27REBET\x27\x20to\x20play\x20again\x20with\x20same\x20wagers,\x20or\x20click\x20\x27NEW\x27\x20to\x20set\x20new\x20wagers.', 'playerSpot', 'CardBackFrame', 'ResolvePlayer1', 'buttonRedSmall', '_infiniteDeckMode', 'parentContainer', 'GreenSmall', 'gameHeight', 'strokeRoundedRect', 'CurrentState', 'amountToDollarString', 'caption', 'IsOptional', 'assets/images/2nd\x20Chance\x20Logo.png', '_currentState', 'FiveCardPokerHandNames', 'style', '_hitButton', 'fontFamily', 'ChangeStateGameOver', '_playerBettingSpots', 'cardStringToNumber', 'buttonOut', '_baseRankCount', 'ResolvePlayerNatural', 'ResolvePlayer2', '_numRanks', 'toString', 'PlayerHandOffsets', 'shift', 'FlipHoleCard', 'min', 'chip', 'Caption', 'PredealInstructions', 'indexOf', 'ChangeStateMainInput', 'unlock', 'cardWidth', '_dealerHand', 'fontStyle', 'setFontFamily', 'NewGame', 'standOnHand', 'pointerdown', 'ResolveBust', 'audio', 'PlayerHandAnchors', 'onload', '_amount', 'RebetBets', 'assets/images/TGS\x20Cards.png', 'InsuranceInput', '_hitZone']; (function (_0x564a1c, _0x2e4deb) { const _0x3adb4c = function (_0x3062b3) { while (--_0x3062b3) { _0x564a1c['push'](_0x564a1c['shift']()); } }; _0x3adb4c(++_0x2e4deb); }(_0x2e4d, 0x1ce)); const _0x3adb = function (_0x564a1c, _0x2e4deb) { _0x564a1c = _0x564a1c - 0x0; let _0x3adb4c = _0x2e4d[_0x564a1c]; return _0x3adb4c; }; 'use strict'; class Config { static [_0x3adb('0xf4')]() { let _0x532f37 = { 'width': this['gameOptions'][_0x3adb('0x47')], 'height': this[_0x3adb('0xce')][_0x3adb('0x117')], 'backgroundColor': 0x0, 'parent': _0x3adb('0x52'), 'scene': [LoaderScene, GameScene] }; this[_0x3adb('0xcb')] = new Phaser['Game'](_0x532f37); } } Config['emitter'] = new Phaser[(_0x3adb('0x104'))][(_0x3adb('0x17d'))](), Config[_0x3adb('0xce')] = { 'gameWidth': 0x400, 'gameHeight': 0x2f8, 'buttonWidth': 0x7b, 'buttonHeight': 0x23, 'cardWidth': 0x55, 'cardHeight': 0x83, 'chipWidth': 0x37, 'chipHeight': 0x33, 'chipValues': [0x1388, 0x3e8, 0x1f4, 0x64, 0x19, 0x5, 0x1, 0.5], 'scoreFormat': { 'fontFamily': _0x3adb('0xad'), 'fontSize': '18px', 'fontStyle': _0x3adb('0xed'), 'color': _0x3adb('0xa6'), 'align': _0x3adb('0xd5') }, 'helpFormat': { 'fontFamily': 'Arial', 'fontSize': _0x3adb('0x45'), 'color': '#000000', 'align': _0x3adb('0xd5') }, 'feltFormat': { 'fontFamily': _0x3adb('0xad'), 'fontSize': '12px', 'fontColor': _0x3adb('0xa6'), 'align': _0x3adb('0xd5') }, 'commentaryFormat': { 'fontFamily': _0x3adb('0xad'), 'fontSize': _0x3adb('0xbc'), 'fontColor': _0x3adb('0xa6'), 'fontStyle': _0x3adb('0xed'), 'align': _0x3adb('0x60') } }, window[_0x3adb('0x140')] = () => { Config['initGame'](); }; var Point = Phaser[_0x3adb('0x3a')][_0x3adb('0x151')]; class GameScene extends Phaser['Scene']{ constructor() { super(_0x3adb('0xd2')), this[_0x3adb('0x12c')] = [new Point(-0x22, -0x25), new Point(-0x22, -0x25), new Point(-0x22, -0x25), new Point(-0x22, -0x25)], this[_0x3adb('0x13f')] = [new Point(0x46, 0x1c2), new Point(0x12c, 0x1c2), new Point(0x212, 0x1c2), new Point(0x2f8, 0x1c2)], this[_0x3adb('0x3d')] = [new Point(0x32, 0x226), new Point(0x118, 0x226), new Point(0x1fe, 0x226), new Point(0x2e4, 0x226)], this[_0x3adb('0x56')] = [new Point(0xc3, 0x258), new Point(0x1a9, 0x258), new Point(0x28f, 0x258), new Point(0x375, 0x258)], this[_0x3adb('0x180')] = [new Point(0xc3 + 0x3c, 0x258 - 0x23), new Point(0x1a9 + 0x3c, 0x258 - 0x23), new Point(0x28f + 0x3c, 0x258 - 0x23), new Point(0x375 + 0x3c, 0x258 - 0x23)], this[_0x3adb('0x1b')] = new Point(-0x22, -0x25), this[_0x3adb('0x66')] = new Point(0x122, 0x13b), this['InsurancePayoffOffset'] = new Point(-0x22, -0x25), this[_0x3adb('0x167')] = new Point(0x1c2, 0x46), this[_0x3adb('0x14d')] = 0x16, this['_playerBettingSpots'] = new Array(0x0), this[_0x3adb('0xca')] = new Array(0x0), this['_lastWagerAmounts'] = new Array(0x0), this[_0x3adb('0x8e')] = new Array(0x4), this[_0x3adb('0x9e')] = new Array(0x4), this[_0x3adb('0x170')] = new Array(0x0), this[_0x3adb('0x7c')] = new Point(), this[_0x3adb('0x137')] = new Array(0x0), this[_0x3adb('0xa8')] = 0x0, this[_0x3adb('0x81')] = 0x0, this[_0x3adb('0x84')] = 0x0, this[_0x3adb('0x23')] = new Array(0x0), this[_0x3adb('0x8f')] = 0x0, this[_0x3adb('0xc0')] = new Array(0x0), this[_0x3adb('0x62')] = new Array(0x0), this[_0x3adb('0x16')] = new Array(0x0), this[_0x3adb('0x11e')] = -0x1, this[_0x3adb('0x22')] = new Array(0x0), this['_testPlayerHand'] = new Array(0x0); } [_0x3adb('0x5f')]() { this[_0x3adb('0x43')] = this[_0x3adb('0xf6')][_0x3adb('0xc3')](Config['gameOptions'][_0x3adb('0x47')] / 0x2, Config[_0x3adb('0xce')][_0x3adb('0x117')] / 0x2, 'gameFelt'); let _0x587034 = this[_0x3adb('0xf6')][_0x3adb('0xc3')](0xb9, 0x23a, _0x3adb('0x110')); _0x587034[_0x3adb('0x155')](0.5, 0.5); let _0x1d077a = this[_0x3adb('0xf6')]['image'](0x14a, 0x208, _0x3adb('0xe1')); _0x1d077a[_0x3adb('0x155')](0x0, 0x0), _0x1d077a['scale'] = 0.4; let _0x215679 = this[_0x3adb('0xf6')][_0x3adb('0xc3')](0x33e, 0x208, _0x3adb('0x7')); _0x215679[_0x3adb('0x155')](0x0, 0x0); let _0x476251 = this[_0x3adb('0xf6')][_0x3adb('0xc3')](0x1f4, 0xc8, _0x3adb('0x36')); _0x215679['setOrigin'](0x0, 0x0), this[_0x3adb('0x177')]['on'](_0x3adb('0xfa'), function (_0x253fba, _0x1b9785) { _0x1b9785['emit'](_0x3adb('0x65'), _0x1b9785); }, this); let _0xf7ff9d = new Array(0x34); for (let _0x27c92c = 0x0; _0x27c92c < 0x34; _0x27c92c += 0x1)_0xf7ff9d[_0x27c92c] = 0x1; this[_0x3adb('0x188')] = new QuantumShoe(_0xf7ff9d, 0x6); let _0x534580 = this[_0x3adb('0xf6')][_0x3adb('0xda')](), _0x15fdf7 = this[_0x3adb('0xf6')][_0x3adb('0xc3')](0xf, 0x2b7, _0x3adb('0x61')); _0x15fdf7['setOrigin'](0x0, 0x0), _0x15fdf7['setDisplaySize'](0x82, 0x32), _0x534580[_0x3adb('0x37')](0x5, 0xffffff, 0x1), _0x534580[_0x3adb('0x118')](0xf, 0x2b7, 0x82, 0x32, 0x5), this['_scoreField'] = this[_0x3adb('0xf6')][_0x3adb('0x92')](0xf, 0x2b7, ['']), this[_0x3adb('0x6a')][_0x3adb('0x10e')](0x82, 0x32), this[_0x3adb('0x6a')][_0x3adb('0xf3')](0x0, 0x3, 0x0, 0x0), this[_0x3adb('0x6a')][_0x3adb('0x7e')](Config['gameOptions'][_0x3adb('0xa3')]); let _0x460456 = this[_0x3adb('0xf6')]['image'](0x1b8, 0x2b7, _0x3adb('0x21')); _0x460456[_0x3adb('0x155')](0x0, 0x0), _0x460456[_0x3adb('0xb3')](0x239, 0x32), this[_0x3adb('0x85')] = this[_0x3adb('0xf6')]['text'](0x1b8, 0x2b7, ['']), this[_0x3adb('0x85')][_0x3adb('0x10e')](0x239, 0x0), this[_0x3adb('0x85')][_0x3adb('0xf3')](0x0, 0x3, 0x0, 0x0), this[_0x3adb('0x85')][_0x3adb('0x7e')](Config[_0x3adb('0xce')][_0x3adb('0x182')]), this[_0x3adb('0x85')][_0x3adb('0x95')](0x239), _0x534580[_0x3adb('0x37')](0x6, 0xffffff, 0x1), _0x534580[_0x3adb('0x118')](0x1b8, 0x2b7, 0x239, 0x32, 0x5); let _0x51a88c = [0x1, 0x5, 0x19, 0x64]; for (let _0xa76f01 = 0x0; _0xa76f01 < _0x51a88c['length']; _0xa76f01 += 0x1) { let _0x35f8e4 = new Chip({ 'scene': this, 'x': 0xbc + _0xa76f01 * 0x46, 'y': 0x2d0 }); _0x35f8e4[_0x3adb('0xac')] = _0x51a88c[_0xa76f01], _0x35f8e4[_0x3adb('0x155')](0.5, 0.5), _0x35f8e4[_0x3adb('0x77')]({ 'useHandCursor': !![] }), _0x35f8e4['on']('clicked', this[_0x3adb('0x9f')], this), this['add'][_0x3adb('0x100')](_0x35f8e4), this[_0x3adb('0x23')][_0x3adb('0x6f')](_0x35f8e4); } this[_0x3adb('0x54')](0x5); for (let _0xa8f761 = 0x0; _0xa8f761 < 0x4; _0xa8f761 += 0x1) { this[_0x3adb('0x9e')][_0xa8f761] = new Array(0x0), this['_playerAnchors'][_0xa8f761] = new Point(); } this[_0x3adb('0x51')] = new Button({ 'scene': this, 'style': AssetNames['BlueSmall'], 'caption': _0x3adb('0x5'), 'clickEvent': Emissions[_0x3adb('0x34')], 'x': 0x17b, 'y': 0x299, 'visible': ![] }), this['add'][_0x3adb('0x100')](this[_0x3adb('0x51')]), Config[_0x3adb('0xbb')]['on'](Emissions[_0x3adb('0x34')], this[_0x3adb('0x15')], this), this[_0x3adb('0x38')] = new Button({ 'scene': this, 'style': AssetNames[_0x3adb('0x166')], 'caption': _0x3adb('0x11'), 'clickEvent': Emissions[_0x3adb('0x8a')], 'x': 0x20a, 'y': 0x299, 'visible': ![] }), this['add'][_0x3adb('0x100')](this[_0x3adb('0x38')]), Config[_0x3adb('0xbb')]['on'](Emissions[_0x3adb('0x8a')], this[_0x3adb('0x154')], this), this[_0x3adb('0x68')] = [this['_clearButton'], this[_0x3adb('0x38')]], this[_0x3adb('0x187')] = new Button({ 'scene': this, 'style': AssetNames[_0x3adb('0x166')], 'caption': 'NEW', 'clickEvent': Emissions[_0x3adb('0x13a')], 'x': 0x17b, 'y': 0x299, 'visible': ![] }), this[_0x3adb('0xf6')][_0x3adb('0x100')](this[_0x3adb('0x187')]), Config[_0x3adb('0xbb')]['on'](Emissions['NewGame'], this[_0x3adb('0x96')], this), this['_rebetButton'] = new Button({ 'scene': this, 'style': AssetNames[_0x3adb('0x166')], 'caption': _0x3adb('0x18'), 'clickEvent': Emissions[_0x3adb('0x142')], 'x': 0x20a, 'y': 0x299, 'visible': ![] }), this['add'][_0x3adb('0x100')](this[_0x3adb('0x41')]), Config[_0x3adb('0xbb')]['on'](Emissions['RebetBets'], this[_0x3adb('0xfd')], this), this[_0x3adb('0xa7')] = [this[_0x3adb('0x187')], this[_0x3adb('0x41')]], this[_0x3adb('0x98')] = new Button({ 'scene': this, 'style': AssetNames[_0x3adb('0x116')], 'caption': _0x3adb('0x87'), 'clickEvent': Emissions['Yes'], 'x': 0x17b, 'y': 0x299, 'visible': ![] }), this[_0x3adb('0xf6')][_0x3adb('0x100')](this[_0x3adb('0x98')]), Config[_0x3adb('0xbb')]['on'](Emissions[_0x3adb('0x6')], this[_0x3adb('0xdb')], this), this[_0x3adb('0x79')] = new Button({ 'scene': this, 'style': AssetNames['RedSmall'], 'caption': 'NO', 'clickEvent': Emissions['No'], 'x': 0x20a, 'y': 0x299, 'visible': ![] }), this['add'][_0x3adb('0x100')](this[_0x3adb('0x79')]), Config[_0x3adb('0xbb')]['on'](Emissions['No'], this[_0x3adb('0x176')], this), this['_yesNoPanel'] = [this['_yesButton'], this[_0x3adb('0x79')]], this[_0x3adb('0xc8')] = new Button({ 'scene': this, 'style': AssetNames[_0x3adb('0x116')], 'caption': _0x3adb('0xef'), 'clickEvent': Emissions[_0x3adb('0x50')], 'x': 0xec, 'y': 0x299, 'visible': ![] }), this[_0x3adb('0xf6')][_0x3adb('0x100')](this[_0x3adb('0xc8')]), Config[_0x3adb('0xbb')]['on'](Emissions[_0x3adb('0x50')], this[_0x3adb('0x14c')], this), this[_0x3adb('0xb')] = new Button({ 'scene': this, 'style': AssetNames[_0x3adb('0x116')], 'caption': 'DOUBLE', 'clickEvent': Emissions[_0x3adb('0x6e')], 'x': 0x17b, 'y': 0x299, 'visible': ![] }), this['add'][_0x3adb('0x100')](this['_doubleButton']), Config[_0x3adb('0xbb')]['on'](Emissions['Double'], this[_0x3adb('0x10')], this), this['_hitButton'] = new Button({ 'scene': this, 'style': AssetNames['GreenSmall'], 'caption': _0x3adb('0xdd'), 'clickEvent': Emissions[_0x3adb('0x6d')], 'x': 0x20a, 'y': 0x299, 'visible': ![] }), this[_0x3adb('0xf6')]['existing'](this['_hitButton']), Config[_0x3adb('0xbb')]['on'](Emissions['Hit'], this[_0x3adb('0xc4')], this), this[_0x3adb('0xd4')] = new Button({ 'scene': this, 'style': AssetNames[_0x3adb('0x116')], 'caption': _0x3adb('0x73'), 'clickEvent': Emissions['Stand'], 'x': 0x299, 'y': 0x299, 'visible': ![] }), this[_0x3adb('0xf6')][_0x3adb('0x100')](this[_0x3adb('0xd4')]), Config[_0x3adb('0xbb')]['on'](Emissions[_0x3adb('0xab')], this[_0x3adb('0x13b')], this), this[_0x3adb('0xd0')] = [this[_0x3adb('0xc8')], this[_0x3adb('0xb')], this[_0x3adb('0x121')], this[_0x3adb('0xd4')]], this[_0x3adb('0x31')] = new Button({ 'scene': this, 'style': AssetNames[_0x3adb('0x166')], 'caption': _0x3adb('0x19'), 'clickEvent': Emissions[_0x3adb('0xf2')], 'x': 0x375, 'y': 0x2d3, 'visible': ![] }), this[_0x3adb('0xf6')][_0x3adb('0x100')](this[_0x3adb('0x31')]), Config[_0x3adb('0xbb')]['on'](Emissions[_0x3adb('0xf2')], this[_0x3adb('0x1f')], this), this[_0x3adb('0x55')] = new BettingSpot({ 'scene': this, 'x': this[_0x3adb('0x66')]['x'], 'y': this[_0x3adb('0x66')]['y'], 'isOptional': !![], 'isPlayerSpot': ![], 'isLocked': !![], 'minimumBet': 2.5, 'maximumBet': 0x32, 'payoffOffset': this[_0x3adb('0x88')] }), this[_0x3adb('0xf6')][_0x3adb('0x100')](this[_0x3adb('0x55')]), this[_0x3adb('0x124')][0x0] = new BettingSpot({ 'scene': this, 'x': this[_0x3adb('0x56')][0x0]['x'], 'y': this[_0x3adb('0x56')][0x0]['y'], 'isOptional': ![], 'isLocked': ![], 'isPlayerSpot': !![], 'minimumBet': 0x5, 'maximumBet': 0x64, 'payoffOffset': this[_0x3adb('0x12c')][0x0] }), this[_0x3adb('0x124')][0x0][_0x3adb('0x72')]['on']('clicked', this['addSelectedValue'], this), this[_0x3adb('0xf6')]['existing'](this[_0x3adb('0x124')][0x0]); for (let _0x3392a8 = 0x1; _0x3392a8 <= 0x3; _0x3392a8 += 0x1) { let _0x5a619f = new BettingSpot({ 'scene': this, 'x': this[_0x3adb('0x56')][_0x3392a8]['x'], 'y': this[_0x3adb('0x56')][_0x3392a8]['y'], 'isOptional': !![], 'isPlayerSpot': ![], 'isLocked': !![], 'minimumBet': 0x5, 'maximumBet': 0x64, 'payoffOffset': this[_0x3adb('0x12c')][_0x3392a8], 'amount': 0x0 }); this[_0x3adb('0x124')][_0x3392a8] = _0x5a619f, this[_0x3adb('0xf6')]['existing'](this['_playerBettingSpots'][_0x3392a8]); } for (let _0x50b3b4 = 0x0; _0x50b3b4 < 0x4; _0x50b3b4 += 0x1) { let _0x540df3 = new BettingSpot({ 'scene': this, 'x': this[_0x3adb('0x180')][_0x50b3b4]['x'], 'y': this[_0x3adb('0x180')][_0x50b3b4]['y'], 'isOptional': !![], 'isPlayerSpot': ![], 'isLocked': !![], 'minimumBet': 0x5, 'maximumBet': 0x64, 'amount': 0x0 }); this[_0x3adb('0xca')][_0x50b3b4] = _0x540df3, this[_0x3adb('0xf6')][_0x3adb('0x100')](this['_secondChanceSpots'][_0x50b3b4]); } this[_0x3adb('0x76')] = [this[_0x3adb('0x124')][0x0], this['_playerBettingSpots'][0x1], this[_0x3adb('0x124')][0x2], this[_0x3adb('0x124')][0x3], this[_0x3adb('0x55')], this[_0x3adb('0xca')][0x0], this[_0x3adb('0xca')][0x1], this[_0x3adb('0xca')][0x2], this[_0x3adb('0xca')][0x3]], this[_0x3adb('0x179')]['length'] = this[_0x3adb('0x76')][_0x3adb('0x178')], this[_0x3adb('0x4b')] = 0x2710, this[_0x3adb('0x119')] = GameState[_0x3adb('0xe6')]; } [_0x3adb('0x15d')]() { let _0x53bbef = this[_0x3adb('0xc0')][_0x3adb('0x12d')](); switch (_0x53bbef) { case Steps[_0x3adb('0x70')]: { this[_0x3adb('0x9b')](!![], this[_0x3adb('0x81')]); break; } case Steps['CardToDealer']: { this['deliverCard'](![]); break; } case Steps[_0x3adb('0x15c')]: { let _0xec98cf = Math['floor'](this['_dealerHand'][0x1][_0x3adb('0xf9')] / 0x4); _0xec98cf == 0xc ? this['CurrentState'] = GameState[_0x3adb('0x144')] : this[_0x3adb('0x101')](); break; } case Steps[_0x3adb('0x102')]: { let _0x28f828 = Math[_0x3adb('0xe3')](this[_0x3adb('0x137')][0x1]['CardNumber'] / 0x4); if (this['_dealerTotal'] == -0x15) this[_0x3adb('0xe7')](); else _0x28f828 >= 0x8 ? this[_0x3adb('0xd1')]() : this[_0x3adb('0x15d')](); break; } case Steps[_0x3adb('0x12e')]: { this[_0x3adb('0xd')](); break; } case Steps[_0x3adb('0x159')]: { if (this[_0x3adb('0x55')][_0x3adb('0x9d')] > 0x0) { let _0x384a6f = this[_0x3adb('0xa8')] == -0x15 ? 0x2 : -0x1; this[_0x3adb('0x1d')](this[_0x3adb('0x55')], _0x384a6f, !![]); } else this[_0x3adb('0x15d')](); break; } case Steps[_0x3adb('0x134')]: { this[_0x3adb('0x119')] = GameState['MainInput']; break; } case Steps[_0x3adb('0xe')]: { let _0x7f8e91 = Math[_0x3adb('0x185')](this[_0x3adb('0xa8')]), _0x51cdc9 = ''; if (this[_0x3adb('0xa8')] == -0x15 && this[_0x3adb('0x137')]['length'] == 0x2) _0x51cdc9 = _0x3adb('0xde'); else this[_0x3adb('0xa8')] == 0x16 ? _0x51cdc9 = _0x3adb('0x2c') : _0x51cdc9 = _0x7f8e91[_0x3adb('0x12b')](); var _0x9c8aec = this[_0x3adb('0xf6')][_0x3adb('0x92')](0x154, 0x8c, 'Dealer\x20has\x20' + _0x51cdc9); _0x9c8aec['alpha'] = 0x0, _0x9c8aec['setOrigin'](0x0, 0x0), _0x9c8aec[_0x3adb('0x7e')](Config[_0x3adb('0xce')][_0x3adb('0xa0')]), this['_commentaryList'][_0x3adb('0x6f')](_0x9c8aec), this['tweens']['add']({ 'targets': _0x9c8aec, 'alpha': 0x1, 'duration': 0x12c, 'onComplete': this[_0x3adb('0x15d')], 'onCompleteScope': this }); break; } case Steps[_0x3adb('0xb9')]: { this[_0x3adb('0x28')](0x0); break; } case Steps[_0x3adb('0x112')]: { this[_0x3adb('0x28')](0x1); break; } case Steps[_0x3adb('0x129')]: { this[_0x3adb('0x28')](0x2); break; } case Steps[_0x3adb('0x108')]: { this[_0x3adb('0x28')](0x3); break; } case Steps[_0x3adb('0x13d')]: { this[_0x3adb('0x119')] = GameState[_0x3adb('0x63')]; break; } case Steps[_0x3adb('0x123')]: { this['CurrentState'] = GameState[_0x3adb('0x10a')]; break; } case Steps[_0x3adb('0x128')]: { this[_0x3adb('0x170')][0x0] == -0x15 && this['_dealerTotal'] != -0x15 ? this[_0x3adb('0x1d')](this[_0x3adb('0x124')][0x0], 1.5, !![]) : this[_0x3adb('0x15d')](); break; } case Steps[_0x3adb('0x5c')]: { let _0x54bda5 = ![]; for (let _0x22d55d = 0x0; _0x22d55d < this[_0x3adb('0x84')]; _0x22d55d += 0x1) { this[_0x3adb('0x170')][_0x22d55d] <= 0x15 && (_0x54bda5 = !![]); } _0x54bda5 ? this['_dealerTotal'] < 0x11 && this[_0x3adb('0xa8')] >= -0x11 ? this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x171')]) : (this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0xe')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0xb9')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x112')]), this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0x129')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x108')]), this['_stepList'][_0x3adb('0x6f')](Steps[_0x3adb('0x123')])) : this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x123')]); this['doAnimation'](); break; } case Steps[_0x3adb('0x171')]: { this[_0x3adb('0x9b')](![]); this[_0x3adb('0xa8')] < 0x11 && this[_0x3adb('0xa8')] >= -0x11 ? this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x171')]) : (this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0xe')]), this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0xb9')]), this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0x112')]), this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0x129')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x108')]), this['_stepList'][_0x3adb('0x6f')](Steps[_0x3adb('0x123')])); break; } case Steps['PostDoubleControl']: { if (this[_0x3adb('0x170')][this['_currentHand']] > 0x15) this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x13d')]); else this[_0x3adb('0x81')] + 0x1 >= this[_0x3adb('0x84')] ? (this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x12e')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x5c')])) : (this[_0x3adb('0x81')] += 0x1, this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0x134')])); this[_0x3adb('0x15d')](); break; } case Steps[_0x3adb('0x15b')]: { let _0xb39baf = this[_0x3adb('0x9e')][this[_0x3adb('0x81')]][_0x3adb('0x8b')](); this[_0x3adb('0x9e')][this[_0x3adb('0x84')]]['push'](_0xb39baf), this[_0x3adb('0x124')][this[_0x3adb('0x84')]]['Amount'] = this['_playerBettingSpots'][this['_currentHand']][_0x3adb('0x9d')], this[_0x3adb('0x3')](this[_0x3adb('0x8e')][this[_0x3adb('0x81')]], !![], !![]), this[_0x3adb('0x170')][this[_0x3adb('0x81')]] = Blackjack['addCardNumberToHandValue'](_0xb39baf[_0x3adb('0xf9')], 0x0), this[_0x3adb('0x170')][this[_0x3adb('0x84')]] = Blackjack[_0x3adb('0xa1')](_0xb39baf['CardNumber'], 0x0), this[_0x3adb('0x107')][_0x3adb('0xf6')]({ 'targets': _0xb39baf, 'duration': 0x190, 'x': this[_0x3adb('0x8e')][this[_0x3adb('0x84')]]['x'], 'y': this[_0x3adb('0x8e')][this['_handCount']]['y'], 'onComplete': this[_0x3adb('0x15d')], 'onCompleteScope': this }), this[_0x3adb('0x3')](this['_playerAnchors'][this[_0x3adb('0x84')]], !![], ![]), this[_0x3adb('0x84')] += 0x1; break; } default: { console[_0x3adb('0xb5')](_0x3adb('0x42'), _0x53bbef), this[_0x3adb('0xc0')] = []; } } } [_0x3adb('0x9b')](_0x235317, _0x541532 = 0x0) { let _0x359f9d = _0x235317 || this[_0x3adb('0x137')][_0x3adb('0x178')] > 0x0, _0x127a91; if (_0x235317) { let _0x5472f4 = 0x0; for (let _0x58813a = 0x0; _0x58813a < this[_0x3adb('0x84')]; _0x58813a += 0x1)_0x5472f4 += this[_0x3adb('0x9e')][_0x58813a][_0x3adb('0x178')]; _0x5472f4 >= this[_0x3adb('0x7b')][_0x3adb('0x178')] ? _0x127a91 = this[_0x3adb('0x188')]['drawCard']() : _0x127a91 = this[_0x3adb('0x7b')][_0x5472f4]; } else this['_dealerHand'][_0x3adb('0x178')] >= this['_testDealerHand'][_0x3adb('0x178')] ? _0x127a91 = this[_0x3adb('0x188')][_0x3adb('0x9c')]() : _0x127a91 = this['_testDealerHand'][this[_0x3adb('0x137')]['length']]; let _0x52be50 = new PlayingCard({ 'scene': this, 'x': 0x0, 'y': 0x0, 'cardNumber': _0x127a91, 'isFaceUp': _0x359f9d }); return _0x52be50['setOrigin'](0.5, 0.5), this[_0x3adb('0xf6')][_0x3adb('0x100')](_0x52be50), _0x235317 ? (this[_0x3adb('0x9e')][_0x541532][_0x3adb('0x6f')](_0x52be50), this[_0x3adb('0x170')][_0x541532] = Blackjack['addCardNumberToHandValue'](_0x52be50['CardNumber'], this[_0x3adb('0x170')][_0x541532]), this[_0x3adb('0x107')][_0x3adb('0xf6')]({ 'targets': _0x52be50, 'duration': 0x190, 'x': this[_0x3adb('0x8e')][_0x541532]['x'], 'y': this[_0x3adb('0x8e')][_0x541532]['y'], 'ease': Phaser[_0x3adb('0x14')]['Easing']['Expo'][_0x3adb('0x6b')], 'onComplete': this['doAnimation'], 'onCompleteScope': this }), this['updateLocation'](this[_0x3adb('0x8e')][_0x541532], !![])) : (this[_0x3adb('0x137')][_0x3adb('0x6f')](_0x52be50), this[_0x3adb('0xa8')] = Blackjack[_0x3adb('0xa1')](_0x52be50[_0x3adb('0xf9')], this[_0x3adb('0xa8')]), this['tweens'][_0x3adb('0xf6')]({ 'targets': _0x52be50, 'duration': 0x190, 'x': this[_0x3adb('0x7c')]['x'], 'y': this[_0x3adb('0x7c')]['y'], 'ease': Phaser[_0x3adb('0x14')][_0x3adb('0x7a')][_0x3adb('0xe9')]['Out'], 'onComplete': this['doAnimation'], 'completeDelay': 0xc8, 'onCompleteScope': this }), this['updateLocation'](this['_dealerAnchor'], ![])), _0x52be50; } [_0x3adb('0x101')]() { this[_0x3adb('0x168')] = ''; for (let _0x51070a of this[_0x3adb('0xec')]) _0x51070a['visible'] = ![]; let _0x2adbcc = this[_0x3adb('0x170')][0x0] == -0x15, _0x585849 = this[_0x3adb('0xa8')] == -0x15; if (_0x2adbcc) this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps['CheckHoleCard']), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x159')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x128')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x12e')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x123')]), this[_0x3adb('0x15d')](); else _0x585849 ? (this['_stepList'][_0x3adb('0x6f')](Steps[_0x3adb('0x102')]), this['_stepList'][_0x3adb('0x6f')](Steps[_0x3adb('0x159')]), this['_stepList'][_0x3adb('0x6f')](Steps['AnnotateDealer']), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0xb9')]), this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0x123')]), this[_0x3adb('0x15d')]()) : (this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x102')]), this['_stepList'][_0x3adb('0x6f')](Steps[_0x3adb('0x159')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x134')]), this[_0x3adb('0x15d')]()); } [_0x3adb('0xd')]() { let _0x450461 = [0xc8, 0xc8, 0xc8], _0x36a81b = [0x0, 0xc8, 0x190]; this['add'][_0x3adb('0x17f')]({ 'targets': this[_0x3adb('0x137')][0x0], 'delay': _0x36a81b[0x0], 'duration': _0x450461[0x0], 'x': _0x3adb('0x150') }), this[_0x3adb('0xf6')]['tween']({ 'targets': this['_dealerHand'][0x0], 'delay': _0x36a81b[0x1], 'duration': _0x450461[0x1], 'scaleX': 0x0, 'scaleY': 1.2, 'onComplete': () => { this[_0x3adb('0x137')][0x0]['IsFaceUp'] = !![]; } }), this['add'][_0x3adb('0x17f')]({ 'targets': this['_dealerHand'][0x0], 'delay': _0x36a81b[0x2], 'duration': _0x450461[0x2], 'scaleX': 0x1, 'scaleY': 0x1, 'onComplete': this['doAnimation'], 'onCompleteScope': this }); } [_0x3adb('0xe7')]() { let _0x2e5933 = [0x12c, 0x12c, 0xc8], _0x3672eb = [0x0, 0x2bc, 0x3e8]; this[_0x3adb('0xf6')]['tween']({ 'targets': this['_dealerHand'][0x0], 'delay': _0x3672eb[0x0], 'duration': _0x2e5933[0x0], 'x': _0x3adb('0x150') }), this[_0x3adb('0xf6')][_0x3adb('0x17f')]({ 'targets': this[_0x3adb('0x137')][0x0], 'delay': _0x3672eb[0x1], 'duration': _0x2e5933[0x1], 'scaleX': 0x0, 'scaleY': 1.2, 'onComplete': () => { this[_0x3adb('0x137')][0x0][_0x3adb('0x8d')] = !![]; } }), this[_0x3adb('0xf6')][_0x3adb('0x17f')]({ 'targets': this[_0x3adb('0x137')][0x0], 'delay': _0x3672eb[0x2], 'duration': _0x2e5933[0x2], 'scaleX': 0x1, 'scaleY': 0x1, 'onComplete': this[_0x3adb('0x15d')], 'onCompleteScope': this }); } [_0x3adb('0xd1')]() { let _0x262895 = [0x12c, 0x12c], _0x42c79a = [0x0, 0x2bc]; this[_0x3adb('0xf6')][_0x3adb('0x17f')]({ 'targets': this[_0x3adb('0x137')][0x0], 'delay': _0x42c79a[0x0], 'duration': _0x262895[0x0], 'x': _0x3adb('0x150') }), this[_0x3adb('0xf6')][_0x3adb('0x17f')]({ 'targets': this[_0x3adb('0x137')][0x0], 'delay': _0x42c79a[0x1], 'duration': _0x262895[0x1], 'x': _0x3adb('0x103'), 'onComplete': this['doAnimation'], 'onCompleteScope': this }); } ['resolvePlayerHand'](_0x14a148) { if (_0x14a148 < this[_0x3adb('0x84')]) { let _0x51ae85 = Math['abs'](this[_0x3adb('0x170')][_0x14a148]), _0x1ecc54 = Math[_0x3adb('0x185')](this[_0x3adb('0xa8')]), _0x519c56 = this[_0x3adb('0xf6')][_0x3adb('0x92')](this[_0x3adb('0x3d')][_0x14a148]['x'], this[_0x3adb('0x3d')][_0x14a148]['y'], _0x51ae85['toString']()); _0x519c56[_0x3adb('0x7e')](Config[_0x3adb('0xce')]['commentaryFormat']), _0x519c56[_0x3adb('0x155')](0x0, 0x0), _0x519c56[_0x3adb('0x2d')](_0x3adb('0xc6')), this['_commentaryList']['push'](_0x519c56); if (_0x51ae85 <= 0x15) { if (this[_0x3adb('0xa8')] == -0x15 && this[_0x3adb('0x137')][_0x3adb('0x178')] == 0x2) this['_playerTotals'][0x0] == -0x15 && this[_0x3adb('0x84')] == 0x1 ? this[_0x3adb('0x15d')]() : this['resolvePayout'](this[_0x3adb('0x124')][_0x14a148], -0x1, !![]); else { if (_0x51ae85 == 0x15) this[_0x3adb('0x1d')](this[_0x3adb('0x124')][_0x14a148], 0x1, !![]); else { if (_0x1ecc54 == 0x16) { } else { if (_0x1ecc54 > 0x15) this[_0x3adb('0x1d')](this[_0x3adb('0x124')][_0x14a148], 0x1, !![]); else { if (_0x1ecc54 > _0x51ae85) this['resolvePayout'](this[_0x3adb('0xca')][_0x14a148], -0x1, ![], ![]), this['resolvePayout'](this['_playerBettingSpots'][_0x14a148], -0x1, !![]); else _0x1ecc54 < _0x51ae85 ? this[_0x3adb('0x1d')](this[_0x3adb('0x124')][_0x14a148], 0x1, !![]) : this[_0x3adb('0x15d')](); } } } } } else this['doAnimation'](); } else this['doAnimation'](); } [_0x3adb('0xcc')](_0xe7c7a4) { for (let _0x3b62e7 = 0x0; _0x3b62e7 < _0xe7c7a4[_0x3adb('0x178')]; _0x3b62e7 += 0x1) { _0xe7c7a4[_0x3b62e7][_0x3adb('0x17c')](); } _0xe7c7a4[_0x3adb('0x178')] = 0x0; } [_0x3adb('0xd3')]() { this[_0x3adb('0x188')][_0x3adb('0x16e')](); for (let _0x6f49ba = 0x0; _0x6f49ba < 0x4; _0x6f49ba += 0x1) { this['_playerTotals'][_0x6f49ba] = 0x0, this[_0x3adb('0x8e')][_0x6f49ba]['x'] = this[_0x3adb('0x13f')][_0x6f49ba]['x'], this['_playerAnchors'][_0x6f49ba]['y'] = this[_0x3adb('0x13f')][_0x6f49ba]['y'], this[_0x3adb('0xcc')](this[_0x3adb('0x9e')][_0x6f49ba]), this[_0x3adb('0x9e')][_0x6f49ba][_0x3adb('0x178')] = 0x0; } this[_0x3adb('0x81')] = 0x0, this[_0x3adb('0x84')] = 0x1, this[_0x3adb('0xa8')] = 0x0, this[_0x3adb('0x7c')]['x'] = this['DealerHandAnchor']['x'], this['_dealerAnchor']['y'] = this[_0x3adb('0x167')]['y'], this[_0x3adb('0xcc')](this[_0x3adb('0x137')]), this['_dealerHand']['length'] = 0x0, this[_0x3adb('0xcc')](this[_0x3adb('0x16')]), this[_0x3adb('0xcc')](this[_0x3adb('0x62')]); for (let _0x4aa5e5 = 0x0; _0x4aa5e5 < this['_bettingSpots']['length']; _0x4aa5e5 += 0x1) { this[_0x3adb('0x76')][_0x4aa5e5]['Amount'] = 0x0, this['_bettingSpots'][_0x4aa5e5][_0x3adb('0x2f')] = 0x1, this['_bettingSpots'][_0x4aa5e5][_0x3adb('0x4d')] && (this['_bettingSpots'][_0x4aa5e5][_0x3adb('0xbd')] = ![]); } for (let _0x5c7eb1 of this[_0x3adb('0xa7')]) { _0x5c7eb1[_0x3adb('0x90')] = ![]; } for (let _0x40c883 of this['_clearDealPanel']) { _0x40c883[_0x3adb('0x90')] = !![]; } this[_0x3adb('0x31')]['visible'] = ![]; for (let _0xa20ed1 of this[_0x3adb('0x23')]) _0xa20ed1[_0x3adb('0x77')](); } ['updateLocation'](_0x42a05b, _0x6be7c8, _0x492402 = ![]) { _0x6be7c8 ? (_0x42a05b['x'] += 0x11 * (_0x492402 ? -0x1 : 0x1), _0x42a05b['y'] -= 0x11 * (_0x492402 ? -0x1 : 0x1)) : _0x42a05b['x'] += 0x11 * (_0x492402 ? -0x1 : 0x1); } [_0x3adb('0xbe')]() { this[_0x3adb('0x165')][_0x3adb('0xff')](_0x3adb('0x14e')); } ['resolvePayout'](_0x34c948, _0x41d5f4, _0x51ae7a, _0x2186f2 = !![], _0x138495 = 0x0) { if (_0x34c948['Amount'] != 0x0) { if (_0x41d5f4 == -0x1) { this['Score'] -= _0x34c948[_0x3adb('0x9d')]; let _0x57bd61 = new BettingSpot({ 'scene': this, 'x': _0x34c948['x'], 'y': _0x34c948['y'], 'amount': _0x34c948[_0x3adb('0x9d')], 'isLocked': !![] }); this[_0x3adb('0x16')][_0x3adb('0x6f')](_0x57bd61), this[_0x3adb('0xf6')][_0x3adb('0x100')](_0x57bd61), _0x34c948[_0x3adb('0x2f')] = 0x0, _0x34c948['Amount'] = 0x0, this[_0x3adb('0x107')][_0x3adb('0xf6')]({ 'targets': _0x57bd61, 'duration': 0x12c, 'x': 0x0, 'y': 0x0, 'alpha': 0x0, 'delay': _0x138495, 'onComplete': _0x2186f2 ? this[_0x3adb('0x15d')] : null, 'onCompleteScope': this }); } else { let _0x4500b5 = new BettingSpot({ 'scene': this, 'amount': _0x34c948[_0x3adb('0x9d')] * _0x41d5f4, 'x': 0x0, 'y': 0x0, 'isLocked': !![] }); this[_0x3adb('0x4b')] += _0x4500b5[_0x3adb('0x9d')], this[_0x3adb('0x16')]['push'](_0x4500b5), this[_0x3adb('0xf6')]['existing'](_0x4500b5); if (_0x51ae7a) this[_0x3adb('0xc')]['bringToTop'](_0x34c948); this['tweens'][_0x3adb('0xf6')]({ 'targets': _0x4500b5, 'duration': 0x12c, 'x': _0x34c948['x'] + _0x34c948[_0x3adb('0xfb')]['x'], 'y': _0x34c948['y'] + _0x34c948[_0x3adb('0xfb')]['y'], 'onComplete': _0x2186f2 ? this[_0x3adb('0x15d')] : null, 'onCompleteScope': this }); } } else { if (_0x2186f2) this[_0x3adb('0x15d')](); } } [_0x3adb('0x54')](_0x3434b1) { for (let _0x54ab12 = 0x0; _0x54ab12 < this['_chipButtons'][_0x3adb('0x178')]; _0x54ab12 += 0x1) { this['_chipButtons'][_0x54ab12]['Value'] == _0x3434b1 ? (this[_0x3adb('0x23')][_0x54ab12][_0x3adb('0xe8')] = 1.2, this[_0x3adb('0xf')] = _0x3434b1) : this[_0x3adb('0x23')][_0x54ab12][_0x3adb('0xe8')] = 0x1; } } [_0x3adb('0x184')]() { switch (this[_0x3adb('0x119')]) { case GameState[_0x3adb('0xe6')]: { this[_0x3adb('0xd3')](), this[_0x3adb('0x168')] = StringTable[_0x3adb('0x132')]; break; } case GameState[_0x3adb('0x160')]: { for (let _0x14f6c3 of this[_0x3adb('0x68')]) _0x14f6c3[_0x3adb('0x90')] = ![]; for (let _0x311b47 of this[_0x3adb('0x23')]) _0x311b47['disableInteractive'](); this[_0x3adb('0x168')] = ''; for (let _0x5f0ec4 of this[_0x3adb('0x76')]) { (!_0x5f0ec4[_0x3adb('0x11c')] || _0x5f0ec4['Amount'] > 0x0) && (_0x5f0ec4[_0x3adb('0x9d')] = Math[_0x3adb('0xf1')](_0x5f0ec4[_0x3adb('0x9d')], _0x5f0ec4[_0x3adb('0x173')])); } for (let _0x414723 = 0x0; _0x414723 < this[_0x3adb('0x179')][_0x3adb('0x178')]; _0x414723 += 0x1) { this[_0x3adb('0x76')][_0x414723][_0x3adb('0xf0')](), this[_0x3adb('0x76')][_0x414723]['IsLocked'] = !![], this['_lastWagerAmounts'][_0x414723] = this[_0x3adb('0x76')][_0x414723][_0x3adb('0x9d')]; } this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x70')]), this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0x1e')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x70')]), this['_stepList'][_0x3adb('0x6f')](Steps[_0x3adb('0x1e')]), this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0x15c')]), this['doAnimation'](); break; } case GameState[_0x3adb('0x144')]: { for (let _0x1a4451 of this[_0x3adb('0xec')]) _0x1a4451[_0x3adb('0x90')] = !![]; this[_0x3adb('0x168')] = StringTable[_0x3adb('0x189')]; break; } case GameState[_0x3adb('0xe2')]: { if (this[_0x3adb('0x9e')][this[_0x3adb('0x81')]][_0x3adb('0x178')] < 0x2) this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x70')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x134')]), this['doAnimation'](); else { for (let _0xb8869b of this[_0x3adb('0xd0')]) _0xb8869b[_0x3adb('0x90')] = !![]; this['_playerHands'][this[_0x3adb('0x81')]][_0x3adb('0x178')] == 0x2 && this[_0x3adb('0x84')] < 0x4 && Math['floor'](this[_0x3adb('0x9e')][this['_currentHand']][0x0][_0x3adb('0xf9')] / 0x4) == Math[_0x3adb('0xe3')](this['_playerHands'][this[_0x3adb('0x81')]][0x1][_0x3adb('0xf9')] / 0x4) ? this[_0x3adb('0xc8')][_0x3adb('0x135')]() : this[_0x3adb('0xc8')][_0x3adb('0xf8')](), this[_0x3adb('0x9e')][this['_currentHand']][_0x3adb('0x178')] == 0x2 ? this[_0x3adb('0xb')][_0x3adb('0x135')]() : this[_0x3adb('0xb')]['lock'](), this[_0x3adb('0x168')] = _0x3adb('0x3b') + (this[_0x3adb('0x81')] + 0x1) + _0x3adb('0x91') + this[_0x3adb('0x84')] + ':\x20' + Blackjack[_0x3adb('0x16b')](this[_0x3adb('0x170')][this[_0x3adb('0x81')]]); } break; } case GameState[_0x3adb('0x63')]: { for (let _0x3f5fae of this[_0x3adb('0xec')]) _0x3f5fae[_0x3adb('0x90')] = !![]; this[_0x3adb('0x168')] = StringTable[_0x3adb('0x4a')]; break; } case GameState[_0x3adb('0x10a')]: { for (let _0x340108 of this[_0x3adb('0xa7')]) _0x340108[_0x3adb('0x90')] = !![]; this[_0x3adb('0x168')] = StringTable[_0x3adb('0x10a')]; break; } default: { console[_0x3adb('0xb5')](_0x3adb('0x74'), this['CurrentState']); break; } } } ['addSelectedValue'](_0x224999) { if (this[_0x3adb('0xf')] > 0x0) { let _0xccb9dc = _0x224999[_0x3adb('0x115')], _0x55173d = Math['min'](_0xccb9dc[_0x3adb('0x9d')] + this[_0x3adb('0xf')], _0xccb9dc[_0x3adb('0x4')]); this[_0x3adb('0xbe')](), _0xccb9dc[_0x3adb('0x9d')] = _0x55173d; } } [_0x3adb('0x154')]() { this[_0x3adb('0xbe')](), this[_0x3adb('0x119')] = GameState[_0x3adb('0x160')]; } [_0x3adb('0x15')]() { for (let _0x562fb8 of this[_0x3adb('0x76')]) { _0x562fb8['Amount'] = 0x0; } this[_0x3adb('0xbe')](); } ['newBets']() { this[_0x3adb('0xbe')](), this[_0x3adb('0x119')] = GameState['Predeal']; } [_0x3adb('0xfd')]() { this[_0x3adb('0xbe')](), this['predealInitialization'](); for (let _0x550bfb = 0x0; _0x550bfb < this[_0x3adb('0x76')][_0x3adb('0x178')]; _0x550bfb += 0x1) { this['_bettingSpots'][_0x550bfb][_0x3adb('0x9d')] = this[_0x3adb('0x179')][_0x550bfb]; } this[_0x3adb('0x119')] = GameState[_0x3adb('0x160')]; } [_0x3adb('0xdb')]() { this[_0x3adb('0xbe')](); if (this[_0x3adb('0x11e')] == GameState[_0x3adb('0x144')]) this[_0x3adb('0x55')][_0x3adb('0x9d')] = this[_0x3adb('0x124')][0x0][_0x3adb('0x9d')] / 0x2, this[_0x3adb('0x101')](); else { if (this[_0x3adb('0x11e')] == GameState[_0x3adb('0x63')]) { for (let _0x52c330 of this[_0x3adb('0xec')]) _0x52c330[_0x3adb('0x90')] = ![]; this[_0x3adb('0x168')] = '', this['_secondChanceSpots'][this['_currentHand']][_0x3adb('0x9d')] = this[_0x3adb('0x124')][this[_0x3adb('0x81')]][_0x3adb('0x9d')], this[_0x3adb('0x8e')][this[_0x3adb('0x81')]]['x'] -= 0x28, this[_0x3adb('0x8e')][this[_0x3adb('0x81')]]['y'] -= 0x5a; let _0x379670 = this[_0x3adb('0x170')][this[_0x3adb('0x81')]], _0x37b36a = this[_0x3adb('0x9b')](!![], this[_0x3adb('0x81')]); _0x37b36a[_0x3adb('0xb8')] = 0x5a, this[_0x3adb('0x170')][this[_0x3adb('0x81')]] = _0x379670; let _0x190404 = Blackjack[_0x3adb('0xa1')](_0x37b36a[_0x3adb('0xf9')], 0x0); if (_0x190404 == -0xb) _0x190404 = 0x1; this[_0x3adb('0x170')][this[_0x3adb('0x81')]] = Math[_0x3adb('0x185')](this[_0x3adb('0x170')][this['_currentHand']]), this[_0x3adb('0x170')][this[_0x3adb('0x81')]] -= _0x190404, this[_0x3adb('0x170')][this['_currentHand']] > 0x15 ? (this['_currentHand'] + 0x1 >= this['_handCount'] ? (this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x12e')]), this['_stepList']['push'](Steps[_0x3adb('0x5c')])) : this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x134')]), this[_0x3adb('0x1d')](this[_0x3adb('0xca')][this[_0x3adb('0x81')]], -0x1, ![], ![], 0x2bc), this[_0x3adb('0x1d')](this[_0x3adb('0x124')][this['_currentHand']], -0x1, ![], !![], 0x3e8), this[_0x3adb('0x81')] += 0x1) : (this[_0x3adb('0x81')] + 0x1 >= this[_0x3adb('0x84')] ? (this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0x12e')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x5c')])) : (this[_0x3adb('0x81')] += 0x1, this['_stepList']['push'](Steps[_0x3adb('0x134')])), this[_0x3adb('0x107')][_0x3adb('0xf6')]({ 'target': this['_gameFelt'], 'alpha': 0x1, 'duration': 0x12c, 'onComplete': this[_0x3adb('0x15d')], 'onCompleteScope': this })); } else console[_0x3adb('0xb5')](_0x3adb('0xdc') + this['_currentState'] + _0x3adb('0x33')); } } [_0x3adb('0x176')]() { this[_0x3adb('0xbe')](); if (this[_0x3adb('0x11e')] == GameState[_0x3adb('0x144')]) this[_0x3adb('0x101')](); else { if (this[_0x3adb('0x11e')] == GameState['CheckForDoubleBack']) { for (let _0x49834f of this[_0x3adb('0xec')]) _0x49834f['visible'] = ![]; this[_0x3adb('0x168')] = '', this[_0x3adb('0x81')] + 0x1 >= this[_0x3adb('0x84')] ? (this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0x12e')]), this['_stepList'][_0x3adb('0x6f')](Steps[_0x3adb('0x5c')])) : this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x134')]), this[_0x3adb('0x1d')](this[_0x3adb('0x124')][this['_currentHand']], -0x1, ![], !![]), this[_0x3adb('0x81')] += 0x1; } else console['debug']('Current\x20state\x20' + this[_0x3adb('0x11e')] + _0x3adb('0x80')); } } ['splitPair']() { this[_0x3adb('0xbe')](); for (let _0x1381a5 of this['_mainPanel']) _0x1381a5[_0x3adb('0x90')] = ![]; this[_0x3adb('0x31')][_0x3adb('0x90')] = ![], this['Instructions'] = ''; let _0x1c5ee1 = Math[_0x3adb('0xe3')](this[_0x3adb('0x9e')][this[_0x3adb('0x81')]][0x0][_0x3adb('0xf9')] / 0x4); _0x1c5ee1 == 0xc ? (this['_stepList'][_0x3adb('0x6f')](Steps['SplitPair']), this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0x70')]), this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0xc9')]), this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0x70')]), this['_stepList'][_0x3adb('0x6f')](Steps[_0x3adb('0x12e')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x5c')])) : (this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x15b')]), this['_stepList'][_0x3adb('0x6f')](Steps[_0x3adb('0x70')]), this['_stepList'][_0x3adb('0x6f')](Steps[_0x3adb('0x134')])), this[_0x3adb('0x15d')](); } [_0x3adb('0x10')]() { this[_0x3adb('0xbe')](); for (let _0x582bc0 of this[_0x3adb('0xd0')]) _0x582bc0[_0x3adb('0x90')] = ![]; this[_0x3adb('0x31')][_0x3adb('0x90')] = ![], this['Instructions'] = ''; let _0x252c3e = this[_0x3adb('0x124')][this[_0x3adb('0x81')]], _0x39885b = Math[_0x3adb('0x12f')](_0x252c3e['Amount'] * 0x2, _0x252c3e[_0x3adb('0x9d')] + _0x252c3e[_0x3adb('0x4')]); _0x252c3e[_0x3adb('0x9d')] = _0x39885b, this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x82')]), this[_0x3adb('0x9b')](!![], this[_0x3adb('0x81')]); } [_0x3adb('0xc4')]() { this[_0x3adb('0xbe')](); for (let _0x17bd92 of this[_0x3adb('0xd0')]) _0x17bd92['visible'] = ![]; this[_0x3adb('0x31')][_0x3adb('0x90')] = ![], this[_0x3adb('0x168')] = '', this[_0x3adb('0x9b')](!![], this['_currentHand']), this[_0x3adb('0x170')][this[_0x3adb('0x81')]] > 0x15 ? this[_0x3adb('0xc0')]['push'](Steps[_0x3adb('0x13d')]) : this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x134')]); } [_0x3adb('0x13b')]() { this['playClick'](); for (let _0x2b77a4 of this[_0x3adb('0xd0')]) _0x2b77a4[_0x3adb('0x90')] = ![]; this[_0x3adb('0x31')]['visible'] = ![], this['Instructions'] = '', this[_0x3adb('0x170')][this[_0x3adb('0x81')]] > 0x15 ? this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x13d')]) : (this[_0x3adb('0x81')] + 0x1 >= this[_0x3adb('0x84')] ? (this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x12e')]), this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x5c')])) : this[_0x3adb('0xc0')][_0x3adb('0x6f')](Steps[_0x3adb('0x134')]), this[_0x3adb('0x81')] += 0x1), this[_0x3adb('0x15d')](); } [_0x3adb('0x1f')]() { } [_0x3adb('0x9f')](_0x4d42ae) { this[_0x3adb('0xbe')](), this[_0x3adb('0x54')](_0x4d42ae[_0x3adb('0xac')]); } get [_0x3adb('0x119')]() { return this[_0x3adb('0x11e')]; } set [_0x3adb('0x119')](_0x10bb5f) { this[_0x3adb('0x11e')] = _0x10bb5f, this[_0x3adb('0x184')](); } set [_0x3adb('0x168')](_0x156eda) { let _0x150ab8 = this['TargetFontInstructionSize']; this[_0x3adb('0x85')][_0x3adb('0x92')] = _0x156eda; while (this[_0x3adb('0x85')][_0x3adb('0xa9')] > 0x32) { _0x150ab8 -= 0x1, this[_0x3adb('0x85')][_0x3adb('0xe0')](_0x150ab8 - 0x1); } } get ['Score']() { return this[_0x3adb('0x8f')]; } set [_0x3adb('0x4b')](_0x1c5de0) { var _0x17394e; while (_0x1c5de0 < 0x0) { _0x1c5de0 += 0xc350; } this[_0x3adb('0x8f')] = _0x1c5de0; let _0x336134 = [_0x3adb('0x12'), General[_0x3adb('0x11a')](_0x1c5de0)]; (_0x17394e = this[_0x3adb('0x6a')]) === null || _0x17394e === void 0x0 ? void 0x0 : _0x17394e[_0x3adb('0x1c')](_0x336134); } } class LoaderScene extends Phaser[_0x3adb('0x24')]{ constructor() { super('LoaderScene'); } ['preload']() { this['load'][_0x3adb('0x13e')](_0x3adb('0x14e'), [_0x3adb('0xee'), _0x3adb('0x169')]), this[_0x3adb('0xc5')][_0x3adb('0xc3')](_0x3adb('0x64'), 'assets/images/Blank\x20Game\x20Felt.png'), this[_0x3adb('0xc5')][_0x3adb('0xc3')](_0x3adb('0x61'), _0x3adb('0x57')), this[_0x3adb('0xc5')][_0x3adb('0xc3')](_0x3adb('0x0'), _0x3adb('0x59')), this[_0x3adb('0xc5')][_0x3adb('0xc3')](_0x3adb('0x21'), _0x3adb('0xf5')), this[_0x3adb('0xc5')][_0x3adb('0xc3')](_0x3adb('0x15e'), _0x3adb('0x2e')), this[_0x3adb('0xc5')][_0x3adb('0xc3')](_0x3adb('0x110'), 'assets/images/2nd\x20Chance\x20Spot.png'), this[_0x3adb('0xc5')]['image'](_0x3adb('0xe1'), _0x3adb('0x152')), this[_0x3adb('0xc5')][_0x3adb('0xc3')](_0x3adb('0x7'), _0x3adb('0x11d')), this[_0x3adb('0xc5')]['image'](_0x3adb('0x36'), _0x3adb('0xcf')), this[_0x3adb('0xc5')][_0x3adb('0x20')](_0x3adb('0xd6'), _0x3adb('0x143'), { 'frameWidth': Config['gameOptions'][_0x3adb('0x136')], 'frameHeight': Config[_0x3adb('0xce')][_0x3adb('0x75')] }), this[_0x3adb('0xc5')][_0x3adb('0x20')](_0x3adb('0x130'), _0x3adb('0xaa'), { 'frameWidth': Config[_0x3adb('0xce')][_0x3adb('0x1a')], 'frameHeight': Config[_0x3adb('0xce')]['chipHeight'] }), this['load'][_0x3adb('0x20')](AssetNames[_0x3adb('0x27')], _0x3adb('0x15a'), { 'frameWidth': Config[_0x3adb('0xce')][_0x3adb('0x2')], 'frameHeight': Config[_0x3adb('0xce')][_0x3adb('0x10c')] }), this[_0x3adb('0xc5')][_0x3adb('0x20')](AssetNames[_0x3adb('0x166')], _0x3adb('0x17'), { 'frameWidth': Config[_0x3adb('0xce')][_0x3adb('0x2')], 'frameHeight': Config[_0x3adb('0xce')][_0x3adb('0x10c')] }), this[_0x3adb('0xc5')][_0x3adb('0x20')](AssetNames[_0x3adb('0x116')], _0x3adb('0xaf'), { 'frameWidth': Config[_0x3adb('0xce')][_0x3adb('0x2')], 'frameHeight': Config[_0x3adb('0xce')][_0x3adb('0x10c')] }); } [_0x3adb('0x5f')]() { this[_0x3adb('0x17b')]['start'](_0x3adb('0xd2')); } } class AssetNames { } AssetNames[_0x3adb('0x27')] = _0x3adb('0x113'), AssetNames['BlueSmall'] = _0x3adb('0x97'), AssetNames['GreenSmall'] = _0x3adb('0x67'); class BettingSpot extends Phaser[_0x3adb('0x157')][_0x3adb('0x46')]{ constructor(_0x1a5983) { var _0x29908b, _0x4e3bbd, _0x18d185, _0x934fe7, _0xa31d8e, _0x900959, _0x56e448; super(_0x1a5983[_0x3adb('0x17b')], _0x1a5983['x'], _0x1a5983['y']), this[_0x3adb('0xba')] = -0x5, this[_0x3adb('0x141')] = 0x0, this[_0x3adb('0xd9')] = _0x1a5983, this[_0x3adb('0x145')] = new Phaser[(_0x3adb('0x157'))][(_0x3adb('0x146'))](this['scene'], 0x0, 0x0, _0x3adb('0x15e')), this[_0x3adb('0x145')]['setOrigin'](0x1, 0x1), this['_hitZone'][_0x3adb('0x2f')] = 0.00001, this[_0x3adb('0x145')][_0x3adb('0x77')]({ 'useHandCursor': !![] }), this[_0x3adb('0xf6')](this[_0x3adb('0x145')]), this[_0x3adb('0x141')] = (_0x29908b = _0x1a5983[_0x3adb('0x3c')]) !== null && _0x29908b !== void 0x0 ? _0x29908b : 0x0, this[_0x3adb('0xb0')] = (_0x4e3bbd = _0x1a5983[_0x3adb('0x30')]) !== null && _0x4e3bbd !== void 0x0 ? _0x4e3bbd : ![], this[_0x3adb('0x2b')] = (_0x18d185 = _0x1a5983['isLocked']) !== null && _0x18d185 !== void 0x0 ? _0x18d185 : ![], this['_isPlayerSpot'] = (_0x934fe7 = _0x1a5983['isPlayerSpot']) !== null && _0x934fe7 !== void 0x0 ? _0x934fe7 : !![], this[_0x3adb('0xa')] = (_0xa31d8e = _0x1a5983[_0x3adb('0x105')]) !== null && _0xa31d8e !== void 0x0 ? _0xa31d8e : 0x5, this[_0x3adb('0x17e')] = (_0x900959 = _0x1a5983[_0x3adb('0x16d')]) !== null && _0x900959 !== void 0x0 ? _0x900959 : 0x64, this[_0x3adb('0xe4')] = (_0x56e448 = _0x1a5983[_0x3adb('0x158')]) !== null && _0x56e448 !== void 0x0 ? _0x56e448 : new Point(-0x22, -0x25), this[_0x3adb('0x29')](); } [_0x3adb('0x29')]() { let _0xedafc4 = this['_amount'], _0x5119dc = 0x0; this[_0x3adb('0x149')](); if (_0xedafc4 == 0x0) { if (!this[_0x3adb('0x2b')]) { let _0x3b3f06 = new Chip({ 'scene': this[_0x3adb('0x17b')], 'x': 0x0, 'y': 0x0 }); _0x3b3f06['Value'] = 0x5, _0x3b3f06[_0x3adb('0x155')](0x1, 0x1), this[_0x3adb('0xf6')](_0x3b3f06), _0x3b3f06[_0x3adb('0xb6')](0xff); let _0x4ebdb6 = Config[_0x3adb('0xce')][_0x3adb('0x1a')], _0x3eec31 = Config[_0x3adb('0xce')]['chipHeight']; this[_0x3adb('0x145')][_0x3adb('0xb3')](_0x4ebdb6, _0x3eec31), this['add'](this['_hitZone']); } } else { let _0x1f11fe = 0x0; do { let _0x2e540b = Config[_0x3adb('0xce')][_0x3adb('0xfc')][_0x5119dc]; if (_0xedafc4 >= _0x2e540b) { let _0x470e11 = 0x0, _0x57698a = _0x1f11fe * this[_0x3adb('0xba')]; _0x1f11fe > 0x0 && (_0x470e11 += Math[_0x3adb('0x161')]() * 0x3 - 0x1, _0x57698a += Math[_0x3adb('0x161')]() * 0x3 - 0x1);; let _0x3f5bac = new Chip({ 'scene': this[_0x3adb('0x17b')], 'x': _0x470e11, 'y': _0x57698a }); _0x3f5bac[_0x3adb('0xac')] = _0x2e540b, _0x3f5bac[_0x3adb('0x155')](0x1, 0x1), this['add'](_0x3f5bac), _0xedafc4 = Math[_0x3adb('0x39')]((_0xedafc4 - _0x2e540b) * 0x64) / 0x64, _0x1f11fe += 0x1; } else _0x5119dc += 0x1; } while (_0xedafc4 >= 0.5); let _0x405fe9 = Config[_0x3adb('0xce')][_0x3adb('0x1a')], _0x1f98c9 = -(Config[_0x3adb('0xce')]['chipHeight'] * -0x1 + (_0x1f11fe - 0x1) * this[_0x3adb('0xba')]); this['_hitZone'][_0x3adb('0xb3')](_0x405fe9, _0x1f98c9), this[_0x3adb('0xf6')](this[_0x3adb('0x145')]); } } get ['Amount']() { return this[_0x3adb('0x141')]; } set [_0x3adb('0x9d')](_0x5909b3) { this['_amount'] = _0x5909b3, this[_0x3adb('0x29')](); } get [_0x3adb('0x72')]() { return this[_0x3adb('0x145')]; } get [_0x3adb('0xbd')]() { return this[_0x3adb('0x2b')]; } set [_0x3adb('0xbd')](_0x502012) { this[_0x3adb('0x2b')] = _0x502012, _0x502012 ? this['_hitZone'][_0x3adb('0xf0')]() : this['_hitZone'][_0x3adb('0x77')](), this[_0x3adb('0x29')](); } get [_0x3adb('0x11c')]() { return this[_0x3adb('0xb0')]; } set [_0x3adb('0x11c')](_0x1e6c76) { this[_0x3adb('0xb0')] = _0x1e6c76; } get [_0x3adb('0x4d')]() { return this[_0x3adb('0x1')]; } set [_0x3adb('0x4d')](_0x2eafa8) { this['_isPlayerSpot'] = _0x2eafa8; } get [_0x3adb('0x4')]() { return this[_0x3adb('0x17e')]; } set ['MaximumBet'](_0x445cdd) { this[_0x3adb('0x17e')] = _0x445cdd; } get [_0x3adb('0x173')]() { return this[_0x3adb('0xa')]; } set ['MinimumBet'](_0x370a2d) { this['_minimumBet'] = _0x370a2d; } get [_0x3adb('0xfb')]() { return this['_payoffOffset']; } set [_0x3adb('0xfb')](_0x4ff4a5) { this[_0x3adb('0xe4')] = _0x4ff4a5; } } class Blackjack { static [_0x3adb('0xa1')](_0x5d6a58, _0x11836a) { let _0x2531c1 = Math[_0x3adb('0xe3')](_0x5d6a58 / 0x4); return this[_0x3adb('0xb7')](_0x2531c1, _0x11836a, ![]); } static [_0x3adb('0xb7')](_0x1ce9ba, _0x1d8b1a, _0x18ffe8 = ![]) { let _0x4563ba = 0x0; if (_0x18ffe8) switch (_0x1ce9ba) { case 0x0: _0x4563ba = 0xa; break; default: _0x4563ba = _0x1ce9ba; break; } else switch (_0x1ce9ba) { case 0xc: _0x4563ba = 0x1; break; case 0x8: case 0x9: case 0xa: case 0xb: _0x4563ba = 0xa; break; default: _0x4563ba = _0x1ce9ba + 0x2; break; }return this[_0x3adb('0x83')](_0x4563ba, _0x1d8b1a); } static [_0x3adb('0x83')](_0x273782, _0x65a456) { let _0x207f8d = _0x65a456; return _0x273782 == 0x1 ? _0x207f8d < 0x0 ? _0x207f8d -= 0x1 : _0x207f8d = -0x1 * (_0x207f8d + 0xb) : _0x207f8d < 0x0 ? _0x207f8d -= _0x273782 : _0x207f8d += _0x273782, _0x207f8d < -0x15 && (_0x207f8d = Math[_0x3adb('0x185')](_0x207f8d + 0xa)), _0x207f8d; } static [_0x3adb('0x16b')](_0x5a61d9) { return _0x5a61d9 > 0x0 ? _0x3adb('0x10b') + _0x5a61d9 : _0x3adb('0x8') + Math[_0x3adb('0x185')](_0x5a61d9); } } class Button extends Phaser[_0x3adb('0x157')][_0x3adb('0x46')]{ constructor(_0x53ec49) { var _0x4c15c9, _0x107c1c, _0x2d1a7f, _0x4a53e1, _0x55b3fa; super(_0x53ec49[_0x3adb('0x17b')], _0x53ec49['x'], _0x53ec49['y']), this[_0x3adb('0x3e')] = ![], this[_0x3adb('0x17b')] = _0x53ec49[_0x3adb('0x17b')], this[_0x3adb('0xd9')] = _0x53ec49, this[_0x3adb('0x89')] = this['_config'][_0x3adb('0x17b')][_0x3adb('0xf6')][_0x3adb('0x53')](0x0, 0x0, this['_config'][_0x3adb('0x120')], 0x0), this[_0x3adb('0xf6')](this[_0x3adb('0x89')]), this['_background'][_0x3adb('0x77')]({ 'useHandCursor': !![] }), this[_0x3adb('0x89')]['on'](_0x3adb('0x13c'), this[_0x3adb('0x175')], this), this[_0x3adb('0x89')]['on'](_0x3adb('0x186'), this['buttonUp'], this), this[_0x3adb('0x89')]['on'](_0x3adb('0xc7'), this[_0x3adb('0x99')], this), this[_0x3adb('0x89')]['on'](_0x3adb('0x172'), this[_0x3adb('0x126')], this), this[_0x3adb('0x4f')] = _0x53ec49[_0x3adb('0x11b')], this[_0x3adb('0x25')] = this['_config']['scene'][_0x3adb('0xf6')][_0x3adb('0x92')](0x0, 0x0, _0x53ec49['caption']), this['_label'][_0x3adb('0xe0')]((_0x4c15c9 = _0x53ec49[_0x3adb('0xd8')]) !== null && _0x4c15c9 !== void 0x0 ? _0x4c15c9 : 0xe), this[_0x3adb('0x25')][_0x3adb('0xcd')]((_0x107c1c = _0x53ec49[_0x3adb('0x138')]) !== null && _0x107c1c !== void 0x0 ? _0x107c1c : _0x3adb('0xed')), this['_label'][_0x3adb('0x164')]((_0x2d1a7f = _0x53ec49[_0x3adb('0x94')]) !== null && _0x2d1a7f !== void 0x0 ? _0x2d1a7f : '#FFFFFF'), this['_label'][_0x3adb('0x139')]((_0x4a53e1 = _0x53ec49[_0x3adb('0x122')]) !== null && _0x4a53e1 !== void 0x0 ? _0x4a53e1 : 'Arial'), this[_0x3adb('0x25')]['setOrigin'](0.5, 0.5), this[_0x3adb('0x90')] = (_0x55b3fa = _0x53ec49[_0x3adb('0x90')]) !== null && _0x55b3fa !== void 0x0 ? _0x55b3fa : !![], this['add'](this[_0x3adb('0x25')]); } [_0x3adb('0xf8')]() { this[_0x3adb('0x89')][_0x3adb('0xf0')](), this[_0x3adb('0x89')][_0x3adb('0xb6')](0x888888); } [_0x3adb('0x135')]() { this[_0x3adb('0x89')]['setInteractive'](), this[_0x3adb('0x89')][_0x3adb('0x40')](); } [_0x3adb('0x26')]() { this[_0x3adb('0x3e')] ? (this[_0x3adb('0x89')]['setFrame'](0x1), this[_0x3adb('0xd9')]['params'] != undefined ? Config[_0x3adb('0xbb')][_0x3adb('0x9')](this[_0x3adb('0xd9')][_0x3adb('0x4e')], this[_0x3adb('0xd9')][_0x3adb('0x181')]) : Config[_0x3adb('0xbb')][_0x3adb('0x9')](this[_0x3adb('0xd9')][_0x3adb('0x4e')])) : this[_0x3adb('0x89')][_0x3adb('0x7d')](0x0); } ['buttonOver']() { this[_0x3adb('0x89')][_0x3adb('0x7d')](0x1), this[_0x3adb('0x3e')] = !![]; } [_0x3adb('0x175')]() { this[_0x3adb('0x89')][_0x3adb('0x7d')](0x2); } [_0x3adb('0x126')]() { this[_0x3adb('0x89')][_0x3adb('0x7d')](0x0), this[_0x3adb('0x3e')] = ![]; } get [_0x3adb('0x131')]() { return this[_0x3adb('0x4f')]; } set [_0x3adb('0x131')](_0xae02c1) { this['_caption'] = _0xae02c1, this[_0x3adb('0x25')][_0x3adb('0x1c')](_0xae02c1); } } class Chip extends Phaser[_0x3adb('0x157')][_0x3adb('0x48')]{ constructor(_0x1c1d41) { super(_0x1c1d41[_0x3adb('0x17b')], _0x1c1d41['x'], _0x1c1d41['y'], 'chip'), this[_0x3adb('0x6c')] = 0x1; } get [_0x3adb('0xac')]() { return this[_0x3adb('0x6c')]; } set ['Value'](_0x45e400) { let _0x3ba349 = Config[_0x3adb('0xce')][_0x3adb('0xfc')][_0x3adb('0x133')](_0x45e400); _0x3ba349 >= 0x0 && (this[_0x3adb('0x7d')](_0x3ba349), this[_0x3adb('0x6c')] = _0x45e400); } } class Constants { } Constants[_0x3adb('0xae')] = _0x3adb('0x14a'), Constants['CardSuits'] = _0x3adb('0x16f'), Constants[_0x3adb('0x32')] = [0x2, 0x3, 0x5, 0x7, 0xb, 0xd, 0x11, 0x13, 0x17, 0x1d, 0x1f, 0x25, 0x29, 0x2b, 0x2f, 0x35, 0x3b, 0x3d, 0x43, 0x47, 0x49, 0x4f, 0x53, 0x59, 0x61, 0x65, 0x67, 0x6b, 0x6d, 0x71, 0x7f, 0x83, 0x89, 0x8b, 0x95, 0x97, 0x9d, 0xa3, 0xa7, 0xad, 0xb3, 0xb5, 0xbf, 0xc1, 0xc5, 0xc7, 0xd3, 0xdf, 0xe3, 0xe5, 0xe9, 0xef, 0xf1], Constants[_0x3adb('0x11f')] = ['Incomplete', _0x3adb('0x7f'), _0x3adb('0x156'), _0x3adb('0x13'), _0x3adb('0x10d'), _0x3adb('0xb2'), 'Flush', _0x3adb('0x44'), _0x3adb('0xc2'), _0x3adb('0x15f'), _0x3adb('0x69'), _0x3adb('0x5a')], Constants[_0x3adb('0x58')] = [[], [], [], [Constants[_0x3adb('0x32')][0x0] * Constants[_0x3adb('0x32')][0x1] * Constants[_0x3adb('0x32')][0xc], Constants[_0x3adb('0x32')][0x0] * Constants['Primes'][0x1] * Constants[_0x3adb('0x32')][0x2], Constants['Primes'][0x1] * Constants[_0x3adb('0x32')][0x2] * Constants['Primes'][0x3], Constants[_0x3adb('0x32')][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants[_0x3adb('0x32')][0x4], Constants['Primes'][0x3] * Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5], Constants[_0x3adb('0x32')][0x4] * Constants['Primes'][0x5] * Constants[_0x3adb('0x32')][0x6], Constants[_0x3adb('0x32')][0x5] * Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7], Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8], Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8] * Constants['Primes'][0x9], Constants[_0x3adb('0x32')][0x8] * Constants[_0x3adb('0x32')][0x9] * Constants[_0x3adb('0x32')][0xa], Constants[_0x3adb('0x32')][0x9] * Constants[_0x3adb('0x32')][0xa] * Constants[_0x3adb('0x32')][0xb], Constants[_0x3adb('0x32')][0xa] * Constants[_0x3adb('0x32')][0xb] * Constants[_0x3adb('0x32')][0xc]], [Constants[_0x3adb('0x32')][0x0] * Constants[_0x3adb('0x32')][0x1] * Constants[_0x3adb('0x32')][0x2] * Constants['Primes'][0xc], Constants['Primes'][0x0] * Constants[_0x3adb('0x32')][0x1] * Constants['Primes'][0x2] * Constants['Primes'][0x3], Constants['Primes'][0x1] * Constants[_0x3adb('0x32')][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants[_0x3adb('0x32')][0x4], Constants[_0x3adb('0x32')][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5], Constants['Primes'][0x3] * Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5] * Constants[_0x3adb('0x32')][0x6], Constants[_0x3adb('0x32')][0x4] * Constants['Primes'][0x5] * Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7], Constants['Primes'][0x5] * Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7] * Constants['Primes'][0x8], Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8] * Constants[_0x3adb('0x32')][0x9], Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8] * Constants['Primes'][0x9] * Constants['Primes'][0xa], Constants[_0x3adb('0x32')][0x8] * Constants[_0x3adb('0x32')][0x9] * Constants['Primes'][0xa] * Constants['Primes'][0xb], Constants[_0x3adb('0x32')][0x9] * Constants[_0x3adb('0x32')][0xa] * Constants[_0x3adb('0x32')][0xb] * Constants[_0x3adb('0x32')][0xc]], [Constants[_0x3adb('0x32')][0x0] * Constants['Primes'][0x1] * Constants[_0x3adb('0x32')][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants[_0x3adb('0x32')][0xc], Constants[_0x3adb('0x32')][0x0] * Constants[_0x3adb('0x32')][0x1] * Constants[_0x3adb('0x32')][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants['Primes'][0x4], Constants[_0x3adb('0x32')][0x1] * Constants[_0x3adb('0x32')][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5], Constants[_0x3adb('0x32')][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5] * Constants['Primes'][0x6], Constants['Primes'][0x3] * Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5] * Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7], Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5] * Constants[_0x3adb('0x32')][0x6] * Constants['Primes'][0x7] * Constants[_0x3adb('0x32')][0x8], Constants[_0x3adb('0x32')][0x5] * Constants['Primes'][0x6] * Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8] * Constants[_0x3adb('0x32')][0x9], Constants['Primes'][0x6] * Constants[_0x3adb('0x32')][0x7] * Constants['Primes'][0x8] * Constants[_0x3adb('0x32')][0x9] * Constants[_0x3adb('0x32')][0xa], Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8] * Constants[_0x3adb('0x32')][0x9] * Constants[_0x3adb('0x32')][0xa] * Constants['Primes'][0xb], Constants[_0x3adb('0x32')][0x8] * Constants['Primes'][0x9] * Constants[_0x3adb('0x32')][0xa] * Constants['Primes'][0xb] * Constants[_0x3adb('0x32')][0xc]], [Constants[_0x3adb('0x32')][0x0] * Constants[_0x3adb('0x32')][0x1] * Constants[_0x3adb('0x32')][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants[_0x3adb('0x32')][0x4] * Constants['Primes'][0xc], Constants[_0x3adb('0x32')][0x0] * Constants[_0x3adb('0x32')][0x1] * Constants[_0x3adb('0x32')][0x2] * Constants['Primes'][0x3] * Constants[_0x3adb('0x32')][0x4] * Constants['Primes'][0x5], Constants[_0x3adb('0x32')][0x1] * Constants[_0x3adb('0x32')][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants['Primes'][0x4] * Constants['Primes'][0x5] * Constants[_0x3adb('0x32')][0x6], Constants['Primes'][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants['Primes'][0x4] * Constants[_0x3adb('0x32')][0x5] * Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7], Constants['Primes'][0x3] * Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5] * Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8], Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5] * Constants['Primes'][0x6] * Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8] * Constants['Primes'][0x9], Constants[_0x3adb('0x32')][0x5] * Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8] * Constants[_0x3adb('0x32')][0x9] * Constants[_0x3adb('0x32')][0xa], Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8] * Constants[_0x3adb('0x32')][0x9] * Constants[_0x3adb('0x32')][0xa] * Constants[_0x3adb('0x32')][0xb], Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8] * Constants[_0x3adb('0x32')][0x9] * Constants['Primes'][0xa] * Constants[_0x3adb('0x32')][0xb] * Constants['Primes'][0xc]], [Constants[_0x3adb('0x32')][0x0] * Constants[_0x3adb('0x32')][0x1] * Constants[_0x3adb('0x32')][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5] * Constants[_0x3adb('0x32')][0xc], Constants[_0x3adb('0x32')][0x0] * Constants[_0x3adb('0x32')][0x1] * Constants[_0x3adb('0x32')][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants['Primes'][0x4] * Constants['Primes'][0x5] * Constants[_0x3adb('0x32')][0x6], Constants[_0x3adb('0x32')][0x1] * Constants['Primes'][0x2] * Constants[_0x3adb('0x32')][0x3] * Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5] * Constants['Primes'][0x6] * Constants[_0x3adb('0x32')][0x7], Constants[_0x3adb('0x32')][0x2] * Constants['Primes'][0x3] * Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5] * Constants[_0x3adb('0x32')][0x6] * Constants['Primes'][0x7] * Constants[_0x3adb('0x32')][0x8], Constants[_0x3adb('0x32')][0x3] * Constants['Primes'][0x4] * Constants[_0x3adb('0x32')][0x5] * Constants[_0x3adb('0x32')][0x6] * Constants['Primes'][0x7] * Constants[_0x3adb('0x32')][0x8] * Constants[_0x3adb('0x32')][0x9], Constants[_0x3adb('0x32')][0x4] * Constants[_0x3adb('0x32')][0x5] * Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8] * Constants[_0x3adb('0x32')][0x9] * Constants['Primes'][0xa], Constants[_0x3adb('0x32')][0x5] * Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7] * Constants[_0x3adb('0x32')][0x8] * Constants['Primes'][0x9] * Constants[_0x3adb('0x32')][0xa] * Constants[_0x3adb('0x32')][0xb], Constants[_0x3adb('0x32')][0x6] * Constants[_0x3adb('0x32')][0x7] * Constants['Primes'][0x8] * Constants[_0x3adb('0x32')][0x9] * Constants[_0x3adb('0x32')][0xa] * Constants[_0x3adb('0x32')][0xb] * Constants[_0x3adb('0x32')][0xc]]]; class Emissions { } Emissions[_0x3adb('0x174')] = _0x3adb('0x9a'), Emissions['ClearBettingSpots'] = _0x3adb('0xb4'), Emissions['AddCursorValue'] = _0x3adb('0x14b'), Emissions[_0x3adb('0x8a')] = 'Begin\x20deal', Emissions[_0x3adb('0x13a')] = 'New\x20game', Emissions[_0x3adb('0x142')] = _0x3adb('0x147'), Emissions[_0x3adb('0x6')] = 'Yes', Emissions['No'] = 'No', Emissions[_0x3adb('0x50')] = 'Split', Emissions[_0x3adb('0x6e')] = 'Double', Emissions[_0x3adb('0x6d')] = 'Hit', Emissions[_0x3adb('0xab')] = 'Stand', Emissions['HintPlease'] = _0x3adb('0x16a'); class GameState { } GameState[_0x3adb('0xe6')] = 0x0, GameState['StartDeal'] = 0x1, GameState['InsuranceInput'] = 0x2, GameState[_0x3adb('0xe2')] = 0x3, GameState[_0x3adb('0x63')] = 0x4, GameState[_0x3adb('0x10a')] = 0x5; class General { static [_0x3adb('0x11a')](_0x4acf9f) { let _0x4b9674 = Math[_0x3adb('0xe3')](_0x4acf9f), _0x5dfb61 = Math[_0x3adb('0x39')]((_0x4acf9f - _0x4b9674) * 0x64), _0x4ed733 = '', _0x41fb07 = 0x0; do { let _0x3e1bb7 = _0x4b9674 % 0xa; _0x41fb07 > 0x0 && _0x41fb07 % 0x3 == 0x0 && (_0x4ed733 = ',' + _0x4ed733), _0x4ed733 = _0x3e1bb7['toString']() + _0x4ed733, _0x41fb07 += 0x1, _0x4b9674 = Math[_0x3adb('0xe3')](_0x4b9674 / 0xa); } while (_0x4b9674 > 0x0); return _0x5dfb61 < 0xa ? _0x4ed733 = _0x4ed733 + '.0' + _0x5dfb61[_0x3adb('0x12b')]() : _0x4ed733 = _0x4ed733 + '.' + _0x5dfb61, '$' + _0x4ed733; } static [_0x3adb('0x5e')](_0x1fb765) { if (_0x1fb765 == 0x35) return '!!'; else { if (_0x1fb765 == 0x34) return 'ZZ'; else { let _0x201ef8 = Math[_0x3adb('0xe3')](_0x1fb765 / 0x4), _0x37e1b8 = _0x1fb765 % 0x4; return Constants[_0x3adb('0xae')][_0x3adb('0xa5')](_0x201ef8, 0x1) + Constants[_0x3adb('0xc1')][_0x3adb('0xa5')](_0x37e1b8, 0x1); } } } static [_0x3adb('0x125')](_0x28b048) { if (_0x28b048 == '!!') return 0x35; else { if (_0x28b048 == 'ZZ') return 0x34; else { let _0x3d76d7 = _0x28b048[_0x3adb('0xa5')](0x0, 0x1), _0x19c9bf = _0x28b048[_0x3adb('0xa5')](0x1, 0x1); return Constants[_0x3adb('0xae')][_0x3adb('0x133')](_0x3d76d7) * 0x4 + Constants[_0x3adb('0xc1')][_0x3adb('0x133')](_0x19c9bf); } } } static ['cardStringToVector'](_0x2b3efc) { let _0x1ab8a7 = _0x2b3efc[_0x3adb('0xea')]('\x20'), _0x43ac92 = new Array(_0x1ab8a7[_0x3adb('0x178')]); for (let _0x10dcfa = 0x0; _0x10dcfa < _0x43ac92[_0x3adb('0x178')]; _0x10dcfa += 0x1) { _0x43ac92[_0x10dcfa] = this[_0x3adb('0x125')](_0x1ab8a7[_0x10dcfa]); } return _0x43ac92; } static [_0x3adb('0x106')](_0x3505e1) { let _0x1c59cc = this['cardNumberToString'](_0x3505e1[0x0]); for (let _0x24c331 = 0x1; _0x24c331 < _0x3505e1['length']; _0x24c331 += 0x1)_0x1c59cc += '\x20' + this['cardNumberToString'](_0x3505e1[_0x24c331]); return _0x1c59cc; } } class PlayingCard extends Phaser[_0x3adb('0x157')][_0x3adb('0x48')]{ constructor(_0x140253) { var _0xaf82a9, _0x526257; super(_0x140253[_0x3adb('0x17b')], _0x140253['x'], _0x140253['y'], _0x3adb('0xd6')), this['CardBackFrame'] = 0x36, this[_0x3adb('0xf9')] = (_0xaf82a9 = _0x140253[_0x3adb('0xb1')]) !== null && _0xaf82a9 !== void 0x0 ? _0xaf82a9 : 0x0, this[_0x3adb('0x8d')] = (_0x526257 = _0x140253[_0x3adb('0x148')]) !== null && _0x526257 !== void 0x0 ? _0x526257 : ![]; } get ['CardNumber']() { return this[_0x3adb('0x17a')]; } set [_0x3adb('0xf9')](_0x5505e2) { this[_0x3adb('0x17a')] = _0x5505e2, this[_0x3adb('0x4c')] ? this[_0x3adb('0x7d')](_0x5505e2) : this['setFrame'](this[_0x3adb('0x111')]); } get ['IsFaceUp']() { return this['_isFaceUp']; } set [_0x3adb('0x8d')](_0x5c9c20) { this[_0x3adb('0x4c')] = _0x5c9c20, _0x5c9c20 ? this[_0x3adb('0x7d')](this[_0x3adb('0x17a')]) : this[_0x3adb('0x7d')](this[_0x3adb('0x111')]); } } class QuantumShoe { constructor(_0x28841f, _0x307cac = 0x1) { this[_0x3adb('0x114')] = ![], this[_0x3adb('0x127')] = [], this[_0x3adb('0xdf')] = [], this[_0x3adb('0x78')] = 0x0, this[_0x3adb('0xd7')] = _0x307cac; let _0x433a6f = _0x28841f[_0x3adb('0x178')]; this[_0x3adb('0x12a')] = _0x433a6f, this['_baseRankCount'][_0x3adb('0x178')] = _0x433a6f, this[_0x3adb('0xdf')][_0x3adb('0x178')] = _0x433a6f; for (let _0x360741 = 0x0; _0x360741 < _0x433a6f; _0x360741 += 0x1) { this['_baseRankCount'][_0x360741] = _0x28841f[_0x360741] * this['_numDecks']; } this[_0x3adb('0x16e')](); } ['shuffle']() { this[_0x3adb('0x78')] = 0x0; for (let _0x540683 = 0x0; _0x540683 < this[_0x3adb('0x12a')]; _0x540683 += 0x1) { this[_0x3adb('0xdf')][_0x540683] = this[_0x3adb('0x127')][_0x540683], this[_0x3adb('0x78')] += this['_rankCount'][_0x540683]; } } [_0x3adb('0x9c')]() { let _0x527cc7 = Math['floor'](Math[_0x3adb('0x161')]() * this[_0x3adb('0x78')]); for (let _0x513774 = 0x0; _0x513774 < this[_0x3adb('0x12a')]; _0x513774 += 0x1) { _0x527cc7 -= this[_0x3adb('0xdf')][_0x513774]; if (_0x527cc7 < 0x0) return !this['_infiniteDeckMode'] && this[_0x3adb('0xa2')](_0x513774, -0x1), _0x513774; } return -0x1; } [_0x3adb('0x93')](_0x481638) { let _0x5eac38 = this[_0x3adb('0xdf')][_0x481638]; return this['adjustQuantityOfRank'](_0x481638, -0x1), _0x5eac38; } [_0x3adb('0x163')](_0x1438a8) { let _0x54dab3 = 0x0; return this[_0x3adb('0xdf')][_0x1438a8] > 0x0 && (_0x54dab3 = this[_0x3adb('0x86')](_0x1438a8)), _0x54dab3; } [_0x3adb('0xe5')](_0x3000a0) { return this[_0x3adb('0xdf')][_0x3000a0]; } [_0x3adb('0x86')](_0x67eeff) { return this[_0x3adb('0xdf')][_0x67eeff] / this['_numCards']; } ['adjustQuantityOfRank'](_0x543061, _0x2a302b) { return this[_0x3adb('0xdf')][_0x543061] + _0x2a302b < 0x0 ? ![] : (this[_0x3adb('0xdf')][_0x543061] += _0x2a302b, this[_0x3adb('0x78')] += _0x2a302b, !![]); } get [_0x3adb('0x162')]() { return this[_0x3adb('0x78')]; } } class Steps { } Steps[_0x3adb('0x123')] = _0x3adb('0x5d'), Steps[_0x3adb('0x70')] = _0x3adb('0x3f'), Steps[_0x3adb('0x1e')] = _0x3adb('0x14f'), Steps[_0x3adb('0x15c')] = _0x3adb('0xeb'), Steps[_0x3adb('0x102')] = _0x3adb('0x8c'), Steps['ResolveInsurance'] = _0x3adb('0xbf'), Steps[_0x3adb('0x128')] = _0x3adb('0x35'), Steps[_0x3adb('0xe')] = 'Annotate\x20dealer', Steps[_0x3adb('0xb9')] = 'Resolve\x20player\x20hand\x20#0', Steps[_0x3adb('0x112')] = _0x3adb('0x2a'), Steps['ResolvePlayer2'] = _0x3adb('0x183'), Steps['ResolvePlayer3'] = _0x3adb('0x49'), Steps[_0x3adb('0x134')] = _0x3adb('0x5b'), Steps[_0x3adb('0x12e')] = _0x3adb('0x16c'), Steps[_0x3adb('0x5c')] = _0x3adb('0x153'), Steps[_0x3adb('0x171')] = _0x3adb('0xa4'), Steps[_0x3adb('0x82')] = _0x3adb('0x109'), Steps[_0x3adb('0x13d')] = _0x3adb('0x71'), Steps['SplitPair'] = 'Split\x20pair', Steps[_0x3adb('0xc9')] = 'Force\x20next\x20hand'; class StringTable { } StringTable[_0x3adb('0x132')] = _0x3adb('0xf7'), StringTable['GameOver'] = _0x3adb('0x10f'), StringTable['Insurance'] = 'Would\x20you\x20like\x20insurance?\x20(YES\x20/\x20NO)', StringTable[_0x3adb('0x4a')] = _0x3adb('0xfe');